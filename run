#!/bin/bash


usage() { 
    echo "Usage: $0 [-s <sourcepath>] [-l <language>] [-r]"; exit 1; 
}

function chk_optarg_empty() {
    if [ -z "${OPTARG}" ]; then
        usage
    fi
}

# Check options
# s -> set sourcepath -> requires argument
# l -> set language -> requires argument
# G -> open web-gui
while getopts ":s:l:rG" opt; do
    case $opt in
        s)
            chk_optarg_empty
            sourcepath=${OPTARG}
            if [ -d $sourcepath ]; then  
                echo "Sourcepath set to: $sourcepath"
                VALIDSOURCEPATH=true
            else
                echo "\"$sourcepath\" does not seem to be a directory!"
                usage
            fi
            ;;
        l)
            chk_optarg_empty
            language=${OPTARG}

            # Language to upper case
            language=${language^^}

            # Check if language is valid
            case $language in
                "JAVA") ;;
                "PY") ;;
                "PYTHON") ;;
                *) 
                    echo "\"$language\" is not a valid language!"
                    usage
            esac            

            echo "Language set to: $language"
            VALIDLANGUAGE=true
            ;;
        r)
            RUNNOW=true
            ;;
        *)
            usage
            ;;
    esac
done

VENDOR_FOLDER="vendors"

# Switch to directory of this script
cd $(dirname $BASH_SOURCE[0])

# This function checks whether
# the last command has returned an error
# and informs the user and aborts the script if so
function chk() {

    OUT=$?

    if [ $OUT -eq 0 ];then
        echo "execution of $PRO finished!"
        return 0
    fi

    echo "fatal error: $OUT"

    if [ $OUT -eq 127 ];then
        echo "is $PRO installed?"
    fi

    exit

}

PMD_VERSION="5.2.3"
PMD_DL_LINK="http://downloads.sourceforge.net/project/pmd/pmd/$PMD_VERSION/pmd-bin-$PMD_VERSION.zip?r=http%3A%2F%2Fpmd.sourceforge.net%2F&ts=1430211962&use_mirror=cznic"
PMD_FOLDER="pmd"
PATH_TO_PMD_SCRIPT="./$VENDOR_FOLDER/$PMD_FOLDER/bin/run.sh"
function install_pmd() {

    if [ ! -d $VENDOR_FOLDER ];then
        mkdir $VENDOR_FOLDER
    fi

    cd $VENDOR_FOLDER

    wget $PMD_DL_LINK
    unzip "pmd-bin-$PMD_VERSION.zip"*

    rm -r $PMD_FOLDER
    mv "pmd-bin-$PMD_VERSION" $PMD_FOLDER

    cd ".."

}

echo "install python tools..."
PRO="pip3"
eval $PRO install -r ./requirements.txt
chk

echo "check pmd installation ($PATH_TO_PMD_SCRIPT)..."
if [ ! -f $PATH_TO_PMD_SCRIPT ];then
    echo "pmd not found..."
    echo "download and install pmd..."
    install_pmd
else
    echo "pmd is installed!"
fi

PORT=8373
HOST="127.0.0.1"

PID_FILE="./SIZUN.GUNICORN.PID"

echo "start application server with gunicorn..."
PRO="gunicorn"
eval $PRO main:app -b $HOST:$PORT -p $PID_FILE &
MAIN_PID=$?
echo "PID for main.py is $MAIN_PID"
chk

sleep 3

if [ "$VALIDLANGUAGE" = true ]; then
    echo "set language..."
    wget "http://$HOST:$PORT/language/set/$language"
fi

if [ "$VALIDSOURCEPATH" = true ]; then
    echo "set sourceopath..."
    wget "http://$HOST:$PORT/sourcepath/set/$sourcepath"
fi

if [ "$RUNNOW" = true ]; then
    echo "run inspection now..."
    wget "http://$HOST:$PORT/run"
fi

