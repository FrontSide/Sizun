#!/bin/bash


usage() {
    echo "Usage: $0 [-s <sourcepath>] [-l <language>] [-r] [-G]"; exit 1;
}

function chk_optarg_empty() {
    if [ -z "${OPTARG}" ]; then
        usage
    fi
}

# Check options
# s -> set sourcepath -> requires argument
# l -> set language -> requires argument
# G -> open web-gui
while getopts ":s:l:rG" opt; do
    case $opt in
        s)
            chk_optarg_empty
            sourcepath=${OPTARG}
            if [ -d $sourcepath ]; then
                echo "Sourcepath set to: $sourcepath"
                VALIDSOURCEPATH=true
            else
                echo "\"$sourcepath\" does not seem to be a directory!"
                usage
            fi
            ;;
        l)
            chk_optarg_empty
            language=${OPTARG}

            # Language to upper case
            language=${language^^}

            # Check if language is valid
            case $language in
                "JAVA") ;;
                "PY") ;;
                "PYTHON") ;;
                *)
                    echo "\"$language\" is not a valid language!"
                    usage
            esac

            echo "Language set to: $language"
            VALIDLANGUAGE=true
            ;;
        r)
            RUNNOW=true
            ;;

        G)
            if [ "$RUNNOW" = true ]; then
                echo "When GUI selected, automatic run may only be started from there"
                usage
            fi
            OPENGUI=true
            ;;

        *)
            usage
            ;;
    esac
done


# This function checks whether
# the last command has returned an error
# and informs the user and aborts the script if so
function chk() {

    OUT=$?

    if [ $OUT -eq 0 ];then
        echo "execution of $PRO finished!"
        return 0
    fi

    echo "fatal error: $OUT"

    if [ $OUT -eq 127 ];then
        echo "is $PRO installed?"
    fi

    exit

}

# Run installation script if no .INSTALLED file was found
if [ ! -f "./.INSTALLED" ];then
    ./install
fi

# Start Gunicorn and run commands if applicable
PORT=8373
HOST="127.0.0.1"

echo "activate python virtual environment..."
source ./bin/activate

PID_FILE="./SIZUN.GUNICORN.PID"

echo "start application server with gunicorn..."
PRO="gunicorn"
($PRO main:app -b $HOST:$PORT -p $PID_FILE -R --log-syslog &)
MAIN_PID=$?
echo "PID for main.py is $MAIN_PID"
chk

if [ "$VALIDLANGUAGE" = true ]; then
    sleep 2
    echo "set language..."
    curl "http://$HOST:$PORT/language/set/$language"
fi

if [ "$VALIDSOURCEPATH" = true ]; then
    sleep 2
    echo "set sourcepath..."
    sourcepath=$(echo $sourcepath | sed 's/[/]*//') # Remove leading '/'
    curl "http://$HOST:$PORT/sourcepath/set/$sourcepath"
fi

if [ "$RUNNOW" = true ]; then
    sleep 2
    echo "run inspection now..."
    curl "http://$HOST:$PORT/run"
fi

if [ "$OPENGUI" = true ]; then
    echo "open gui in default browser..."
    xdg-open gui/index.html
fi

echo "Sizun is ready!"
read -p "Hit [Enter] to stop sizun."

# Once user quits. Stop gunicorn
./stop
